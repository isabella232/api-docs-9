{"Structs/CryptoError.html#/s:9CryptoKit0A5ErrorV10identifierSSvp":{"name":"identifier","abstract":"<p>See <code>Debuggable.identifier</code></p>","parent_name":"CryptoError"},"Structs/CryptoError.html#/s:9CryptoKit0A5ErrorV6reasonSSvp":{"name":"reason","abstract":"<p>See <code>Debuggable.reason</code></p>","parent_name":"CryptoError"},"Structs/RandomGenerator.html#/s:9CryptoKit13DataGeneratorP08generateC05countSays5UInt8VGSi_tKF":{"name":"generateData(count:)","parent_name":"RandomGenerator"},"Structs/OSRandom.html#/s:9CryptoKit8OSRandomVACycfc":{"name":"init()","abstract":"<p>Create a new <code>OSRandom</code></p>","parent_name":"OSRandom"},"Structs/OSRandom.html#/s:9CryptoKit8OSRandomV12generateData5countSays5UInt8VGSi_tF":{"name":"generateData(count:)","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DataGenerator.html\">DataGenerator</a></code>.</p>","parent_name":"OSRandom"},"Structs/CryptoRandom.html#/s:9CryptoKit0A6RandomVACycfc":{"name":"init()","abstract":"<p>Creates a new <code>CryptoRandom</code>.</p>","parent_name":"CryptoRandom"},"Structs/CryptoRandom.html#/s:9CryptoKit0A6RandomV12generateData5countSays5UInt8VGSi_tKF":{"name":"generateData(count:)","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DataGenerator.html\">DataGenerator</a></code>.</p>","parent_name":"CryptoRandom"},"Structs/RSAKey.html#/s:9CryptoKit6RSAKeyV7private3pemAcA0A4DataO_tKFZ":{"name":"private(pem:)","abstract":"<p>Creates a new <code>RSAKey</code> from a private key pem file.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:9CryptoKit6RSAKeyV6public3pemAcA0A4DataO_tKFZ":{"name":"public(pem:)","abstract":"<p>Creates a new <code>RSAKey</code> from a public key pem file.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:9CryptoKit6RSAKeyV6public11certificateAcA0A4DataO_tKFZ":{"name":"public(certificate:)","abstract":"<p>Creates a new <code>RSAKey</code> from a public key certificate file.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:9CryptoKit6RSAKeyV4typeAA0C4TypeOvp":{"name":"type","abstract":"<p>The specific RSA key type. Either public or private.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:9CryptoKit6RSAKeyV10components1n1e1dACSS_S2SSgtKFZ":{"name":"components(n:e:d:)","abstract":"<p>Creates a new <code>RSAKey</code> from components.</p>","parent_name":"RSAKey"},"Structs/HOTP.html#/s:9CryptoKit4HOTPV4SHA1ACvpZ":{"name":"SHA1","abstract":"<p>SHA-1 digest based HOTP.</p>","parent_name":"HOTP"},"Structs/HOTP.html#/s:9CryptoKit4HOTPV6SHA256ACvpZ":{"name":"SHA256","abstract":"<p>SHA-256 digest based HOTP.</p>","parent_name":"HOTP"},"Structs/HOTP.html#/s:9CryptoKit4HOTPV6SHA512ACvpZ":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest based HOTP.</p>","parent_name":"HOTP"},"Structs/HOTP.html#/s:9CryptoKit4HOTPV9algorithmAA6DigestC9AlgorithmCvp":{"name":"algorithm","abstract":"<p>the specific <code>DigestAlgorithm</code>.</p>","parent_name":"HOTP"},"Structs/HOTP.html#/s:9CryptoKit4HOTPV9algorithmAcA6DigestC9AlgorithmC_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>HOTP</code> using the supplied <code>DigestAlgorithm</code>.</p>","parent_name":"HOTP"},"Structs/HOTP.html#/s:9CryptoKit4HOTPV8generate6digits6secret7counterSSAA9OTPDigitsO_AA0A4DataOSutKF":{"name":"generate(digits:secret:counter:)","abstract":"<p>Generates a single HOTP.</p>","parent_name":"HOTP"},"Structs/TOTP.html#/s:9CryptoKit4TOTPV4SHA1ACvpZ":{"name":"SHA1","abstract":"<p>SHA-1 digest based TOTP.</p>","parent_name":"TOTP"},"Structs/TOTP.html#/s:9CryptoKit4TOTPV6SHA256ACvpZ":{"name":"SHA256","abstract":"<p>SHA-256 digest based TOTP.</p>","parent_name":"TOTP"},"Structs/TOTP.html#/s:9CryptoKit4TOTPV6SHA512ACvpZ":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest based TOTP.</p>","parent_name":"TOTP"},"Structs/TOTP.html#/s:9CryptoKit4TOTPV9algorithmAA6DigestC9AlgorithmCvp":{"name":"algorithm","abstract":"<p><code>DigestAlgorithm</code> being used.</p>","parent_name":"TOTP"},"Structs/TOTP.html#/s:9CryptoKit4TOTPV9algorithmAcA6DigestC9AlgorithmC_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>TOTP</code> using the supplied <code>DigestAlgorithm</code>.</p>","parent_name":"TOTP"},"Structs/TOTP.html#/s:9CryptoKit4TOTPV13generateRange6degree6digits6secret2atSaySSGSi_AA9OTPDigitsOAA0A4DataO10Foundation4DateVtKF":{"name":"generateRange(degree:digits:secret:at:)","abstract":"<p>Generates a range of TOTP tokens to a specific degree. This method","parent_name":"TOTP"},"Structs/TOTP.html#/s:9CryptoKit4TOTPV8generate6digits6secret6offset2atSSAA9OTPDigitsO_AA0A4DataOSi10Foundation4DateVtKF":{"name":"generate(digits:secret:offset:at:)","abstract":"<p>Generates a single TOTP.</p>","parent_name":"TOTP"},"Structs/Cipher/Algorithm.html#/s:9CryptoKit6CipherV9AlgorithmV5namedyAESSKFZ":{"name":"named(_:)","abstract":"<p>Looks up a cipher function algorithm by name (e.g., <q>aes-128-cbc</q>).","parent_name":"Algorithm"},"Structs/Cipher/Algorithm.html#/s:9CryptoKit6CipherV9AlgorithmV9aes256cbcAEvpZ":{"name":"aes256cbc","abstract":"<p>AES-256 CBC cipher.","parent_name":"Algorithm"},"Structs/Cipher/Algorithm.html#/s:9CryptoKit6CipherV9AlgorithmV12aes256cfb128AEvpZ":{"name":"aes256cfb128","abstract":"<p>AES-256 CFB cipher. May not be available on all platforms.","parent_name":"Algorithm"},"Structs/Cipher/Algorithm.html":{"name":"Algorithm","abstract":"<p>Specifies a cipher algorithm (e.g., AES128-ECB) to be used with a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Cipher.html\">Cipher</a></code>.</p>","parent_name":"Cipher"},"Structs/Cipher.html#/s:9CryptoKit6CipherV9algorithmA2C9AlgorithmV_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>Cipher</code> using the supplied <code>CipherAlgorithm</code>.</p>","parent_name":"Cipher"},"Structs/Cipher.html#/s:9CryptoKit6CipherV7encrypt_3key2ivAA0A4DataOAH_A2HSgtKF":{"name":"encrypt(_:key:iv:)","abstract":"<p>Encrypts the supplied plaintext into ciphertext. This method will call <code>reset(key:iv:mode:)</code>, <code>update(data:into:)</code>,","parent_name":"Cipher"},"Structs/Cipher.html#/s:9CryptoKit6CipherV7decrypt_3key2ivAA0A4DataOAH_A2HSgtKF":{"name":"decrypt(_:key:iv:)","abstract":"<p>Decrypts the supplied ciphertext back to plaintext. This method will call <code>reset(key:iv:mode:)</code>, <code>update(data:into:)</code>,","parent_name":"Cipher"},"Structs/Cipher.html":{"name":"Cipher","abstract":"<p>Cryptographic encryption and decryption functions for converting plaintext to and from ciphertext.</p>"},"Structs/TOTP.html":{"name":"TOTP","abstract":"<p>Generates Time-based One-time Passwords using HMAC.</p>"},"Structs/HOTP.html":{"name":"HOTP","abstract":"<p>Generates Counter-based One-time Passwords using HMAC.</p>"},"Structs/RSAKey.html":{"name":"RSAKey","abstract":"<p>Represents an in-memory RSA key.</p>"},"Structs/CryptoRandom.html":{"name":"CryptoRandom","abstract":"<p>Uses OpenSSL <code>RAND_bytes</code> to generate random data.</p>"},"Structs/OSRandom.html":{"name":"OSRandom","abstract":"<p>Uses the operating system&rsquo;s Random function uses <code>random</code> on Linux and <code>arc4random</code> on macOS.</p>"},"Structs/RandomGenerator.html":{"name":"RandomGenerator","abstract":"<p>Undocumented</p>"},"Structs/CryptoError.html":{"name":"CryptoError","abstract":"<p>An error encountered while working with crypto.</p>"},"Protocols/DataGenerator.html#/s:9CryptoKit13DataGeneratorP08generateC05countSays5UInt8VGSi_tKF":{"name":"generateData(count:)","abstract":"<p>Generate <code>count</code> bytes of data.</p>","parent_name":"DataGenerator"},"Protocols/DataGenerator.html#/s:9CryptoKit13DataGeneratorPAAE8generateyqd__qd__mKs17FixedWidthIntegerRd__lF":{"name":"generate(_:)","abstract":"<p>Generates a random type <code>T</code>.</p>","parent_name":"DataGenerator"},"Protocols/DataGenerator.html":{"name":"DataGenerator","abstract":"<p>Capable of generating random <code>Data</code>.</p>"},"Extensions/Collection.html#/s:Sl9CryptoKits5UInt8V7ElementRtzrlE16hexEncodedString9uppercaseSSSb_tF":{"name":"hexEncodedString(uppercase:)","abstract":"<p>Converts <code>Data</code> to a hex-encoded <code>String</code>.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9CryptoKits5UInt8V7ElementRtzrlE15hexEncodedBytes9uppercaseSayACGSb_tF":{"name":"hexEncodedBytes(uppercase:)","abstract":"<p>Applies hex-encoding to <code>Data</code>.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9CryptoKitSQ7ElementRpzrlE13secureCompare2toSbqd___tSlRd__ABQyd__ACRSlF":{"name":"secureCompare(to:)","abstract":"<p>Performs a full-comparison of all elements in two collections. If the two collections have","parent_name":"Collection"},"Extensions/String.html#/s:SS9CryptoKitE18base64URLUnescapedSSyF":{"name":"base64URLUnescaped()","abstract":"<p>Converts a base64-url encoded string to a base64 encoded string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9CryptoKitE16base64URLEscapedSSyF":{"name":"base64URLEscaped()","abstract":"<p>Converts a base64 encoded string to a base64-url encoded string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9CryptoKitE17base64URLUnescapeyyF":{"name":"base64URLUnescape()","abstract":"<p>Converts a base64-url encoded string to a base64 encoded string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9CryptoKitE15base64URLEscapeyyF":{"name":"base64URLEscape()","abstract":"<p>Converts a base64 encoded string to a base64-url encoded string.</p>","parent_name":"String"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE13base32EncodedACSgSS_tcfc":{"name":"init(base32Encoded:)","abstract":"<p>Decodes a base32 encoded <code>String</code>.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE13base32EncodedACSgAC_tcfc":{"name":"init(base32Encoded:)","abstract":"<p>Decodes base32 encoded <code>Data</code>.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE19base32EncodedStringSSyF":{"name":"base32EncodedString()","abstract":"<p>Encodes data to a base32 encoded <code>String</code>.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE013base32EncodedB0ACyF":{"name":"base32EncodedData()","abstract":"<p>Encodes data to base32 encoded <code>Data</code>.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE16base64URLEncoded7optionsACSgSS_So27NSDataBase64DecodingOptionsVtcfc":{"name":"init(base64URLEncoded:options:)","abstract":"<p>Decodes a base64-url encoded string to data.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE16base64URLEncoded7optionsACSgAC_So27NSDataBase64DecodingOptionsVtcfc":{"name":"init(base64URLEncoded:options:)","abstract":"<p>Decodes base64-url encoded data.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE22base64URLEncodedString7optionsSSSo27NSDataBase64EncodingOptionsV_tF":{"name":"base64URLEncodedString(options:)","abstract":"<p>Encodes data to a base64-url encoded string.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE016base64URLEncodedB07optionsACSo27NSDataBase64EncodingOptionsV_tF":{"name":"base64URLEncodedData(options:)","abstract":"<p>Encodes data to base64-url encoded data.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE17base64URLUnescapeyyF":{"name":"base64URLUnescape()","abstract":"<p>Converts base64-url encoded data to a base64 encoded data.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE15base64URLEscapeyyF":{"name":"base64URLEscape()","abstract":"<p>Converts base64 encoded data to a base64-url encoded data.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE18base64URLUnescapedACyF":{"name":"base64URLUnescaped()","abstract":"<p>Converts base64-url encoded data to a base64 encoded data.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9CryptoKitE16base64URLEscapedACyF":{"name":"base64URLEscaped()","abstract":"<p>Converts base64 encoded data to a base64-url encoded data.</p>","parent_name":"Data"},"Extensions/Array.html#/s:Sa9CryptoKits17FixedWidthIntegerRzlE6random5countSayxGSi_tFZ":{"name":"random(count:)","abstract":"<p>Undocumented</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa9CryptoKits17FixedWidthIntegerRzlE6random5count5usingSayxGSi_qd__ztSGRd__lFZ":{"name":"random(count:using:)","abstract":"<p>Undocumented</p>","parent_name":"Array"},"Extensions/FixedWidthInteger.html#/s:s17FixedWidthIntegerP9CryptoKitE6randomxyFZ":{"name":"random()","abstract":"<p>Undocumented</p>","parent_name":"FixedWidthInteger"},"Extensions/FixedWidthInteger.html#/s:s17FixedWidthIntegerP9CryptoKitE6random5usingxqd__z_tSGRd__lFZ":{"name":"random(using:)","abstract":"<p>Undocumented</p>","parent_name":"FixedWidthInteger"},"Extensions/FixedWidthInteger.html":{"name":"FixedWidthInteger"},"Extensions/Array.html":{"name":"Array"},"Extensions/Data.html":{"name":"Data"},"Extensions/String.html":{"name":"String","abstract":"<p>MARK: String Escape</p>"},"Extensions/Collection.html":{"name":"Collection"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO4datayAC10Foundation0C0VcACmF":{"name":"data(_:)","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO6stringyACSScACmF":{"name":"string(_:)","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO12staticStringyACs06StaticE0VcACmF":{"name":"staticString(_:)","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO5bytesyACSays5UInt8VGcACmF":{"name":"bytes(_:)","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO10bytesSliceyACs05ArrayE0Vys5UInt8VGcACmF":{"name":"bytesSlice(_:)","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO5countSivp":{"name":"count","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO6stringSSyF":{"name":"string()","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO5bytesSays5UInt8VGyF":{"name":"bytes()","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO16hexEncodedStringSSyF":{"name":"hexEncodedString()","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO19base32EncodedStringSSyF":{"name":"base32EncodedString()","abstract":"<p>Undocumented</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO11descriptionSSvp":{"name":"description","abstract":"<p><code>CustomStringConvertible</code> conformance.</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:9CryptoKit0A4DataO2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p><code>Equatable</code> conformance.</p>","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"CryptoData"},"Enums/CryptoData.html#/s:s26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc":{"name":"init(stringLiteral:)","parent_name":"CryptoData"},"Enums/RSAPadding.html#/s:9CryptoKit10RSAPaddingO5pkcs1yA2CmF":{"name":"pkcs1","abstract":"<p>PKCS #1 v1.5 padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:9CryptoKit10RSAPaddingO6sslv23yA2CmF":{"name":"sslv23","abstract":"<p>SSLv23 padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:9CryptoKit10RSAPaddingO4noneyA2CmF":{"name":"none","abstract":"<p>No padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:9CryptoKit10RSAPaddingO10pkcs1_OAEPyA2CmF":{"name":"pkcs1_OAEP","abstract":"<p>PKCS #1 v2.0 EME-OAEP + SHA-1 + MGF1 padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:9CryptoKit10RSAPaddingO4x931yA2CmF":{"name":"x931","abstract":"<p>X9.31 padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:9CryptoKit10RSAPaddingO8rawValueACSgs5Int32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new RSAPadding from an Int32.","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:9CryptoKit10RSAPaddingO8rawValues5Int32Vvp":{"name":"rawValue","abstract":"<p>See <code>RawRepresentable</code>.</p>","parent_name":"RSAPadding"},"Enums/RSAKeyType.html#/s:9CryptoKit10RSAKeyTypeO6publicyA2CmF":{"name":"public","abstract":"<p>A public RSA key. Used for verifying signatures.</p>","parent_name":"RSAKeyType"},"Enums/RSAKeyType.html#/s:9CryptoKit10RSAKeyTypeO7privateyA2CmF":{"name":"private","abstract":"<p>A private RSA key. Used for creating and verifying signatures.</p>","parent_name":"RSAKeyType"},"Enums/RSAInputFormat.html#/s:9CryptoKit14RSAInputFormatO6digestyA2CmF":{"name":"digest","abstract":"<p>The input has been hashed already.</p>","parent_name":"RSAInputFormat"},"Enums/RSAInputFormat.html#/s:9CryptoKit14RSAInputFormatO7messageyA2CmF":{"name":"message","abstract":"<p>Raw, unhashed message</p>","parent_name":"RSAInputFormat"},"Enums/OTPDigits.html#/s:9CryptoKit9OTPDigitsO3sixyA2CmF":{"name":"six","abstract":"<p>Six digit password.</p>","parent_name":"OTPDigits"},"Enums/OTPDigits.html#/s:9CryptoKit9OTPDigitsO5sevenyA2CmF":{"name":"seven","abstract":"<p>Seven digit password.</p>","parent_name":"OTPDigits"},"Enums/OTPDigits.html#/s:9CryptoKit9OTPDigitsO5eightyA2CmF":{"name":"eight","abstract":"<p>Eight digit password.</p>","parent_name":"OTPDigits"},"Enums/CipherMode.html#/s:9CryptoKit10CipherModeO7encryptyA2CmF":{"name":"encrypt","abstract":"<p>Encrypts arbitrary data to encrypted ciphertext.</p>","parent_name":"CipherMode"},"Enums/CipherMode.html#/s:9CryptoKit10CipherModeO7decryptyA2CmF":{"name":"decrypt","abstract":"<p>Decrypts encrypted ciphertext back to its original value.</p>","parent_name":"CipherMode"},"Enums/CipherMode.html":{"name":"CipherMode","abstract":"<p>Available cipher modes. Either <code>encrypt</code> or <code>decrypt</code>.</p>"},"Enums/OTPDigits.html":{"name":"OTPDigits","abstract":"<p>Supported OTP password length.</p>"},"Enums/RSAInputFormat.html":{"name":"RSAInputFormat","abstract":"<p>Supported RSA input formats.</p>"},"Enums/RSAKeyType.html":{"name":"RSAKeyType","abstract":"<p>Supported RSA key types.</p>"},"Enums/RSAPadding.html":{"name":"RSAPadding","abstract":"<p>RSA Paddings</p>"},"Enums/CryptoData.html":{"name":"CryptoData","abstract":"<p>Undocumented</p>"},"Global Variables.html#/s:9CryptoKit6BCryptAA0C6DigestCvp":{"name":"BCrypt","abstract":"<p>Creates and verifies BCrypt hashes.</p>"},"Global Variables.html#/s:9CryptoKit9AES256GCMAA19AuthenticatedCipherCvp":{"name":"AES256GCM","abstract":"<p>AES-256 GCM Cipher. This is the reccomended cipher mode. (see <a href=\"https://github.com/vapor/crypto/issues/59\">https://github.com/vapor/crypto/issues/59</a>).</p>"},"Global Variables.html#/s:9CryptoKit9AES256CBCAA6CipherVvp":{"name":"AES256CBC","abstract":"<p>AES-256 CBC Cipher. Only use this if you know what you are doing; use AES-256 GCM otherwise (see <a href=\"https://github.com/vapor/crypto/issues/59\">https://github.com/vapor/crypto/issues/59</a>).</p>"},"Global Variables.html#/s:9CryptoKit12AES256CFB128AA6CipherVvp":{"name":"AES256CFB128","abstract":"<p>AES-256 CFB cipher. May not be available on all platforms."},"Global Variables.html#/s:9CryptoKit3MD4AA6DigestCvp":{"name":"MD4","abstract":"<p>MD4 digest.</p>"},"Global Variables.html#/s:9CryptoKit3MD5AA6DigestCvp":{"name":"MD5","abstract":"<p>MD5 digest.</p>"},"Global Variables.html#/s:9CryptoKit4SHA1AA6DigestCvp":{"name":"SHA1","abstract":"<p>SHA-1 digest.</p>"},"Global Variables.html#/s:9CryptoKit6SHA224AA6DigestCvp":{"name":"SHA224","abstract":"<p>SHA-224 (SHA-2) digest.</p>"},"Global Variables.html#/s:9CryptoKit6SHA256AA6DigestCvp":{"name":"SHA256","abstract":"<p>SHA-256 (SHA-2) digest.</p>"},"Global Variables.html#/s:9CryptoKit6SHA384AA6DigestCvp":{"name":"SHA384","abstract":"<p>SHA-384 (SHA-2) digest.</p>"},"Global Variables.html#/s:9CryptoKit6SHA512AA6DigestCvp":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest.</p>"},"Classes/URandom.html#/s:9CryptoKit7URandomC4pathACSS_tKcfc":{"name":"init(path:)","abstract":"<p>Initialize URandom</p>","parent_name":"URandom"},"Classes/URandom.html#/s:9CryptoKit7URandomC12generateData5countSays5UInt8VGSi_tKF":{"name":"generateData(count:)","abstract":"<p>Get a random array of Bytes</p>","parent_name":"URandom"},"Classes/RSA.html#/s:9CryptoKit3RSAC6SHA256ACvpZ":{"name":"SHA256","abstract":"<p>RSA using SHA256 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:9CryptoKit3RSAC6SHA384ACvpZ":{"name":"SHA384","abstract":"<p>RSA using SHA384 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:9CryptoKit3RSAC6SHA512ACvpZ":{"name":"SHA512","abstract":"<p>RSA using SHA512 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:9CryptoKit3RSAC9algorithmAA6DigestC9AlgorithmCvp":{"name":"algorithm","abstract":"<p>The hashing algorithm to use, (e.g., SHA512). See <code>DigestAlgorithm</code>.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:9CryptoKit3RSAC9algorithmAcA6DigestC9AlgorithmC_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new RSA cipher using the supplied <code>DigestAlgorithm</code>.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:9CryptoKit3RSAC4sign_6format3keyAA0A4DataOAH_AA14RSAInputFormatOAA6RSAKeyVtKF":{"name":"sign(_:format:key:)","abstract":"<p>Signs the supplied input (in format specified by <code>format</code>).</p>","parent_name":"RSA"},"Classes/RSA.html#/s:9CryptoKit3RSAC6verify_5signs6format3keySbAA0A4DataO_AiA14RSAInputFormatOAA6RSAKeyVtKF":{"name":"verify(_:signs:format:key:)","abstract":"<p>Returns <code>true</code> if the supplied signature was created by signing the plaintext data.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:9CryptoKit3RSAC7decrypt_7padding3keyAA0A4DataOAH_AA10RSAPaddingOAA6RSAKeyVtKFZ":{"name":"decrypt(_:padding:key:)","abstract":"<p>Decrypts the supplied input.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:9CryptoKit3RSAC7encrypt_7padding3keyAA0A4DataOAH_AA10RSAPaddingOAA6RSAKeyVtKFZ":{"name":"encrypt(_:padding:key:)","abstract":"<p>Encrypts the supplied input.</p>","parent_name":"RSA"},"Classes/HMAC.html#/s:9CryptoKit4HMACC3MD4ACvpZ":{"name":"MD4","abstract":"<p>MD4 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC3MD5ACvpZ":{"name":"MD5","abstract":"<p>MD5 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC4SHA1ACvpZ":{"name":"SHA1","abstract":"<p>SHA-1 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC6SHA224ACvpZ":{"name":"SHA224","abstract":"<p>SHA-224 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC6SHA256ACvpZ":{"name":"SHA256","abstract":"<p>SHA-256 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC6SHA384ACvpZ":{"name":"SHA384","abstract":"<p>SHA-384 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC6SHA512ACvpZ":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC9algorithmAA6DigestC9AlgorithmCvp":{"name":"algorithm","abstract":"<p>The <code>DigestAlgorithm</code> (e.g., SHA1, MD5, SHA256) to base the message authentication on.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC9algorithmAcA6DigestC9AlgorithmC_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>HMAC</code> using the supplied <code>DigestAlgorithm</code>.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC12authenticate_3keyAA0A4DataOAG_AGtKF":{"name":"authenticate(_:key:)","abstract":"<p>Authenticates the message using the supplied key. This method will first initialize or reset the HMAC","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC5reset3keyyAA0A4DataO_tKF":{"name":"reset(key:)","abstract":"<p>Initializes or resets the HMAC context. This method sets this HMAC&rsquo;s key for subsequent calls to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/HMAC.html#/s:9CryptoKit4HMACC6update4datayAA0A4DataO_tKF\">update(data:)</a></code>.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC6update4datayAA0A4DataO_tKF":{"name":"update(data:)","abstract":"<p>Updates the HMAC digest with a new chunk of data. This method can be called repeatedly for each new chunk.","parent_name":"HMAC"},"Classes/HMAC.html#/s:9CryptoKit4HMACC6finishAA0A4DataOyKF":{"name":"finish()","abstract":"<p>Completes the HMAC digest. This method should be called once after one call to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/HMAC.html#/s:9CryptoKit4HMACC5reset3keyyAA0A4DataO_tKF\">reset(key:)</a></code> and one more","parent_name":"HMAC"},"Classes/PBKDF2/KeySize.html#/s:9CryptoKit6PBKDF2C7KeySizeO06digestE0yA2EmF":{"name":"digestSize","abstract":"<p>Undocumented</p>","parent_name":"KeySize"},"Classes/PBKDF2/KeySize.html#/s:9CryptoKit6PBKDF2C7KeySizeO5fixedyAESicAEmF":{"name":"fixed(_:)","abstract":"<p>Undocumented</p>","parent_name":"KeySize"},"Classes/PBKDF2/KeySize.html":{"name":"KeySize","abstract":"<p>The requested amount of output bytes from the key derivation</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C3MD4ACvpZ":{"name":"MD4","abstract":"<p>MD4 digest powered key derivation.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C3MD5ACvpZ":{"name":"MD5","abstract":"<p>MD5 digest powered key derivation.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C4SHA1ACvpZ":{"name":"SHA1","abstract":"<p>SHA-1 digest powered key derivation.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C6SHA224ACvpZ":{"name":"SHA224","abstract":"<p>SHA-224 (SHA-2) digest powered key derivation.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C6SHA256ACvpZ":{"name":"SHA256","abstract":"<p>SHA-256 (SHA-2) digest powered key derivation.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C6SHA384ACvpZ":{"name":"SHA384","abstract":"<p>SHA-384 (SHA-2) digest powered key derivation.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C6SHA512ACvpZ":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest powered key derivation.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C6digestAcA6DigestC9AlgorithmC_tcfc":{"name":"init(digest:)","abstract":"<p>Creates a new PBKDF2 derivator based on a hashing algorithm</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:9CryptoKit6PBKDF2C4hash_4salt10iterations7keySizeAA0A4DataOAI_AIs5Int32VAC03KeyH0OtKF":{"name":"hash(_:salt:iterations:keySize:)","abstract":"<p>Derives a key with up to <code>keySize</code> of bytes</p>","parent_name":"PBKDF2"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC5namedyAESSKFZ":{"name":"named(_:)","abstract":"<p>Looks up a hash function algorithm by name (e.g., <q>sha256</q>).","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC2eeoiySbAE_AEtFZ":{"name":"==(_:_:)","abstract":"<p>See <code>Equatable</code>.</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC3md4AEvpZ":{"name":"md4","abstract":"<p>MD4 digest.</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC3md5AEvpZ":{"name":"md5","abstract":"<p>MD5 digest.</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC4sha1AEvpZ":{"name":"sha1","abstract":"<p>SHA-1 digest.</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC6sha224AEvpZ":{"name":"sha224","abstract":"<p>SHA-224 (SHA-2) digest.</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC6sha256AEvpZ":{"name":"sha256","abstract":"<p>SHA-256 (SHA-2) digest.</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC6sha384AEvpZ":{"name":"sha384","abstract":"<p>SHA-384 (SHA-2) digest.</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html#/s:9CryptoKit6DigestC9AlgorithmC6sha512AEvpZ":{"name":"sha512","abstract":"<p>SHA-512 (SHA-2) digest.</p>","parent_name":"Algorithm"},"Classes/Digest/Algorithm.html":{"name":"Algorithm","abstract":"<p>Cryptographic hash function algorithm.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:9CryptoKit6DigestC9algorithmAC9AlgorithmCvp":{"name":"algorithm","abstract":"<p>The <code>DigestAlgorithm</code> (e.g., SHA1, MD5, SHA256) to use.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:9CryptoKit6DigestC9algorithmA2C9AlgorithmC_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>Digest</code> using the supplied <code>DigestAlgorithm</code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:9CryptoKit6DigestC4hashyAA0A4DataOAFKF":{"name":"hash(_:)","abstract":"<p>Creates a digest for the supplied data. This method will call <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:9CryptoKit6DigestC5resetyyKF\">.reset()</a></code>, <code>.update(data:)</code>, and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:9CryptoKit6DigestC6finishAA0A4DataOyKF\">.finish()</a></code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:9CryptoKit6DigestC5resetyyKF":{"name":"reset()","abstract":"<p>Resets / initializes the digest algorithm context. This must be called once before calling <code>update(data:)</code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:9CryptoKit6DigestC6updateyyAA0A4DataOKF":{"name":"update(_:)","abstract":"<p>Updates the digest with another data chunk. This can be called multiple times. Use this method for streaming digests.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:9CryptoKit6DigestC6finishAA0A4DataOyKF":{"name":"finish()","abstract":"<p>Finalizes the digest, returning the digest data.</p>","parent_name":"Digest"},"Classes/AuthenticatedCipher/Algorithm.html#/s:9CryptoKit19AuthenticatedCipherC9AlgorithmV5namedyAESSKFZ":{"name":"named(_:)","abstract":"<p>Looks up an authenticated cipher function algorithm by name (e.g., <q>aes-256-gcm</q>).","parent_name":"Algorithm"},"Classes/AuthenticatedCipher/Algorithm.html#/s:9CryptoKit19AuthenticatedCipherC9AlgorithmV9aes256gcmAEvpZ":{"name":"aes256gcm","abstract":"<p>AES-256 GCM cipher. This is the recommended cipher.","parent_name":"Algorithm"},"Classes/AuthenticatedCipher/Algorithm.html":{"name":"Algorithm","abstract":"<p>Specifies an authenticated cipher algorithm (e.g., AES-256-GCM) to be used with an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AuthenticatedCipher.html\">AuthenticatedCipher</a></code>.</p>","parent_name":"AuthenticatedCipher"},"Classes/AuthenticatedCipher.html#/s:9CryptoKit19AuthenticatedCipherC9algorithmA2C9AlgorithmV_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Cipher.html\">Cipher</a></code> using the supplied <code>CipherAlgorithm</code>.</p>","parent_name":"AuthenticatedCipher"},"Classes/AuthenticatedCipher.html#/s:9CryptoKit19AuthenticatedCipherC7encrypt_3key2ivAA0A4DataO10ciphertext_AH3tagtAH_A2HtKF":{"name":"encrypt(_:key:iv:)","abstract":"<p>Encrypts the supplied plaintext into ciphertext. This method will call <code>reset(key:iv:mode:)</code>, <code>update(data:into:)</code>,","parent_name":"AuthenticatedCipher"},"Classes/AuthenticatedCipher.html#/s:9CryptoKit19AuthenticatedCipherC7decrypt_3key2iv3tagAA0A4DataOAI_A3ItKF":{"name":"decrypt(_:key:iv:tag:)","abstract":"<p>Decrypts the supplied ciphertext back to plaintext. This method will call <code>reset(key:iv:mode:)</code>, <code>update(data:into:)</code>,","parent_name":"AuthenticatedCipher"},"Classes/BCryptDigest.html#/s:9CryptoKit12BCryptDigestCACycfc":{"name":"init()","abstract":"<p>Creates a new <code>BCryptDigest</code>. Use the global <code><a href=\"36f8f5912051ae747ef441d6511ca4cbGlobal Variables.html#/s:9CryptoKit6BCryptAA0C6DigestCvp\">BCrypt</a></code> convenience variable.</p>","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html#/s:9CryptoKit12BCryptDigestC4hash_4cost4saltAA0A4DataOAH_SiAHSgtKF":{"name":"hash(_:cost:salt:)","abstract":"<p>Creates a BCrypt digest for the supplied data.</p>","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html#/s:9CryptoKit12BCryptDigestC6verify_7createdSbAA0A4DataO_AGtKF":{"name":"verify(_:created:)","abstract":"<p>Verifies an existing BCrypt hash matches the supplied plaintext value. Verification works by parsing the salt and version from","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html":{"name":"BCryptDigest","abstract":"<p>Creates and verifies BCrypt hashes. Normally you will not need to initialize one of these classes and you will"},"Classes/AuthenticatedCipher.html":{"name":"AuthenticatedCipher","abstract":"<p>AuthenticatedCipher supports AEAD-type ciphers. It feels a lot like &lsquo;Cipher&rsquo; except that it supports the"},"Classes/Digest.html":{"name":"Digest","abstract":"<p>Cryptographic hash functions convert data of arbitrary size to a fixed-size digest.</p>"},"Classes/PBKDF2.html":{"name":"PBKDF2","abstract":"<p>PBKDF2 derives a fixed or custom length key from a password and salt.</p>"},"Classes/HMAC.html":{"name":"HMAC","abstract":"<p>HMAC is a MAC (message authentication code), i.e. a keyed hash function used for message authentication, which is based on a hash function.</p>"},"Classes/RSA.html":{"name":"RSA","abstract":"<p>RSA is an asymmetric cryptographic algorithm for signing and verifying data.</p>"},"Classes/URandom.html":{"name":"URandom","abstract":"<p>URandom represents a file connection to /dev/urandom on Unix systems."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}