{"Structs/ConnectionPoolConfig.html#/s:8AsyncKit20ConnectionPoolConfigV14maxConnectionsACSi_tcfc":{"name":"init(maxConnections:)","abstract":"<p>Creates a new <code>ConnectionPoolConfig</code>.</p>","parent_name":"ConnectionPoolConfig"},"Structs/ConnectionPoolConfig.html":{"name":"ConnectionPoolConfig","abstract":"<p>Configuration options for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ConnectionPool.html\">ConnectionPool</a></code>.</p>"},"Protocols/ConnectionPoolItem.html#/s:8AsyncKit18ConnectionPoolItemP8isClosedSbvp":{"name":"isClosed","abstract":"<p>If <code>true</code>, this connection has closed.</p>","parent_name":"ConnectionPoolItem"},"Protocols/ConnectionPoolItem.html#/s:8AsyncKit18ConnectionPoolItemP5close3NIO15EventLoopFutureCyytGyF":{"name":"close()","abstract":"<p>Closes this connection.</p>","parent_name":"ConnectionPoolItem"},"Protocols/ConnectionPoolSource.html#/s:8AsyncKit20ConnectionPoolSourceP0C0Qa":{"name":"Connection","abstract":"<p>Associated <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConnectionPoolItem.html\">ConnectionPoolItem</a></code> that will be returned by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConnectionPoolSource.html#/s:8AsyncKit20ConnectionPoolSourceP04makeC03NIO15EventLoopFutureCy0C0QzGyF\">makeConnection()</a></code>.</p>","parent_name":"ConnectionPoolSource"},"Protocols/ConnectionPoolSource.html#/s:8AsyncKit20ConnectionPoolSourceP9eventLoop3NIO05EventG0_pvp":{"name":"eventLoop","abstract":"<p>This source&rsquo;s event loop.</p>","parent_name":"ConnectionPoolSource"},"Protocols/ConnectionPoolSource.html#/s:8AsyncKit20ConnectionPoolSourceP04makeC03NIO15EventLoopFutureCy0C0QzGyF":{"name":"makeConnection()","abstract":"<p>Creates a new connection.</p>","parent_name":"ConnectionPoolSource"},"Protocols/ConnectionPoolSource.html":{"name":"ConnectionPoolSource","abstract":"<p>Source of new connections for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ConnectionPool.html\">ConnectionPool</a></code>.</p>"},"Protocols/ConnectionPoolItem.html":{"name":"ConnectionPoolItem","abstract":"<p>Item managed by a connection pool.</p>"},"Functions.html#/s:8AsyncKit1poiy3NIO15EventLoopFutureCyxGAF_AFtSjRzlF":{"name":"+(_:_:)","abstract":"<p>Adds two futures and produces their sum</p>"},"Functions.html#/s:8AsyncKit2peoiyy3NIO15EventLoopFutureCyxGz_AFtSjRzlF":{"name":"+=(_:_:)","abstract":"<p>Adds two futures and stores the result in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1poiy3NIO15EventLoopFutureCySayxGGAG_AGtlF":{"name":"+(_:_:)","abstract":"<p>Adds two futures and produces their sum</p>"},"Functions.html#/s:8AsyncKit2peoiyy3NIO15EventLoopFutureCySayxGGz_AGtlF":{"name":"+=(_:_:)","abstract":"<p>Adds two futures and stores the result in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1soiy3NIO15EventLoopFutureCyxGAF_AFtSjRzlF":{"name":"-(_:_:)","abstract":"<p>Subtracts one future from another and produces their difference</p>"},"Functions.html#/s:8AsyncKit2seoiyy3NIO15EventLoopFutureCyxGz_AFtSjRzlF":{"name":"-=(_:_:)","abstract":"<p>Subtracts the second future from the first and stores the difference in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1soiy3NIO15EventLoopFutureCySayxGGAG_AGtSQRzlF":{"name":"-(_:_:)","abstract":"<p>Subtracts one future from another and produces their difference</p>"},"Functions.html#/s:8AsyncKit2seoiyy3NIO15EventLoopFutureCySayxGGz_AGtSQRzlF":{"name":"-=(_:_:)","abstract":"<p>Subtracts the second future from the first and stores the difference in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1moiy3NIO15EventLoopFutureCyxGAF_AFtSjRzlF":{"name":"*(_:_:)","abstract":"<p>Multiplies two futures and produces their product</p>"},"Functions.html#/s:8AsyncKit2meoiyy3NIO15EventLoopFutureCyxGz_AFtSjRzlF":{"name":"*=(_:_:)","abstract":"<p>Multiplies two futures and stores the result in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1roiy3NIO15EventLoopFutureCyxGAF_AFtSzRzlF":{"name":"%(_:_:)","abstract":"<p>Returns the remainder of dividing the first future by the second</p>"},"Functions.html#/s:8AsyncKit2reoiyy3NIO15EventLoopFutureCyxGz_AFtSzRzlF":{"name":"%=(_:_:)","abstract":"<p>Divides the first future by the second and stores the remainder in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1aoiy3NIO15EventLoopFutureCyxGAF_AFtSzRzlF":{"name":"&(_:_:)","abstract":"<p>Returns the result of performing a bitwise AND operation on the two given futures</p>"},"Functions.html#/s:8AsyncKit2aeoiyy3NIO15EventLoopFutureCyxGz_AFtSzRzlF":{"name":"&=(_:_:)","abstract":"<p>Stores the result of performing a bitwise AND operation on the two given futures in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1doiy3NIO15EventLoopFutureCyxGAF_AFtSzRzlF":{"name":"/(_:_:)","abstract":"<p>Returns the quotient of dividing the first future by the second</p>"},"Functions.html#/s:8AsyncKit2deoiyy3NIO15EventLoopFutureCyxGz_AFtSzRzlF":{"name":"/=(_:_:)","abstract":"<p>Divides the first future by the second and stores the quotient in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1loiy3NIO15EventLoopFutureCySbGAEyxG_AEyq_GtSzRzSzR_r0_lF":{"name":"<(_:_:)","abstract":"<p>Returns a Boolean value indicating whether the value of the first argument is less than that of the second argument</p>"},"Functions.html#/s:8AsyncKit2leoiy3NIO15EventLoopFutureCySbGAEyxG_AGtSzRzlF":{"name":"<=(_:_:)","abstract":"<p>Returns a Boolean value indicating whether the value of the first argument is less than or equal to that of the second argument</p>"},"Functions.html#/s:8AsyncKit2leoiy3NIO15EventLoopFutureCySbGAEyxG_AEyq_GtSzRzSzR_r0_lF":{"name":"<=(_:_:)","abstract":"<p>Returns a Boolean value indicating whether the value of the first argument is less than or equal to that of the second argument</p>"},"Functions.html#/s:8AsyncKit2geoiy3NIO15EventLoopFutureCySbGAEyxG_AGtSzRzlF":{"name":">=(_:_:)","abstract":"<p>Returns a Boolean value indicating whether the value of the first argument is greater than or equal to that of the second argument</p>"},"Functions.html#/s:8AsyncKit2geoiy3NIO15EventLoopFutureCySbGAEyxG_AEyq_GtSzRzSzR_r0_lF":{"name":">=(_:_:)","abstract":"<p>Returns a Boolean value indicating whether the value of the first argument is greater than or equal to that of the second argument</p>"},"Functions.html#/s:8AsyncKit1goiy3NIO15EventLoopFutureCySbGAEyxG_AGtSzRzlF":{"name":">(_:_:)","abstract":"<p>Returns a Boolean value indicating whether the value of the first argument is greater than that of the second argument</p>"},"Functions.html#/s:8AsyncKit1goiy3NIO15EventLoopFutureCySbGAEyxG_AEyq_GtSzRzSzR_r0_lF":{"name":">(_:_:)","abstract":"<p>Returns a Boolean value indicating whether the value of the first argument is greater than that of the second argument</p>"},"Functions.html#/s:8AsyncKit2lloiy3NIO15EventLoopFutureCyxGAF_AEyq_GtSzRzSzR_r0_lF":{"name":"<<(_:_:)","abstract":"<p>Returns the result of shifting a future’s binary representation the specified number of digits to the left</p>"},"Functions.html#/s:8AsyncKit3lleoiyy3NIO15EventLoopFutureCyxGz_AEyq_GtSzRzSzR_r0_lF":{"name":"<<=(_:_:)","abstract":"<p>Stores the result of shifting a future’s binary representation the specified number of digits to the left in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit2ggoiy3NIO15EventLoopFutureCyxGAF_AEyq_GtSzRzSzR_r0_lF":{"name":">>(_:_:)","abstract":"<p>Returns the result of shifting a future’s binary representation the specified number of digits to the right</p>"},"Functions.html#/s:8AsyncKit3ggeoiyy3NIO15EventLoopFutureCyxGz_AEyq_GtSzRzSzR_r0_lF":{"name":">>=(_:_:)","abstract":"<p>Stores the result of shifting a future’s binary representation the specified number of digits to the right in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1xoiy3NIO15EventLoopFutureCyxGAF_AFtSzRzlF":{"name":"^(_:_:)","abstract":"<p>Returns the result of performing a bitwise XOR operation on the two given futures</p>"},"Functions.html#/s:8AsyncKit2xeoiyy3NIO15EventLoopFutureCyxGz_AFtSzRzlF":{"name":"^=(_:_:)","abstract":"<p>Stores the result of performing a bitwise XOR operation on the two given futures in the left-hand-side variable</p>"},"Functions.html#/s:8AsyncKit1ooiy3NIO15EventLoopFutureCyxGAF_AFtSzRzlF":{"name":"|(_:_:)","abstract":"<p>Returns the result of performing a bitwise OR operation on the two given futures</p>"},"Functions.html#/s:8AsyncKit2oeoiyy3NIO15EventLoopFutureCyxGz_AFtSzRzlF":{"name":"|=(_:_:)","abstract":"<p>Stores the result of performing a bitwise OR operation on the two given futures in the left-hand-side variable</p>"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitSTRzlE7mapEachyACySayqd__GGqd__7ElementQzclF":{"name":"mapEach(_:)","abstract":"<p>Calls a closure on each element in the sequence that is wrapped by an <code>EventLoopFuture</code>.</p>","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitSTRzlE14mapEachCompactyACySayqd__GGqd__Sg7ElementQzclF":{"name":"mapEachCompact(_:)","abstract":"<p>Calls a closure, which returns an <code>Optional</code>, on each element in the sequence that is wrapped by an <code>EventLoopFuture</code>.</p>","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitSTRzlE11flatMapEach2on_ACySayqd__GGAA0bC0_p_ACyqd__G7ElementQzctlF":{"name":"flatMapEach(on:_:)","abstract":"<p>Calls a closure, which returns an <code>EventLoopFuture</code>, on each element","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitSTRzlE18flatMapEachCompact2on_ACySayqd__GGAA0bC0_p_ACyqd__SgG7ElementQzctlF":{"name":"flatMapEachCompact(on:_:)","abstract":"<p>Calls a closure, which returns an <code>EventLoopFuture&lt;Optional&gt;</code>, on each element","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitE11optionalMapyACyqd_0_SgGAFqd__cqd__SgRszr0_lF":{"name":"optionalMap(_:)","abstract":"<p>Calls a closure on an optional value that is wrapped in an <code>EventLoopFuture</code> if it exists.</p>","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitE15optionalFlatMapyACyqd_0_SgGACyqd_0_Gqd__cqd__SgRszr0_lF":{"name":"optionalFlatMap(_:)","abstract":"<p>Calls a closure on an optional value in an <code>EventLoopFuture</code> if it exists.</p>","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitE15optionalFlatMapyACyqd_0_SgGAGqd__cqd__SgRszr0_lF":{"name":"optionalFlatMap(_:)","abstract":"<p>Calls a closure that returns an optional future on an optional value in an <code>EventLoopFuture</code> if it exists.</p>","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitE23optionalFlatMapThrowingyACyqd_0_SgGAFqd__Kcqd__SgRszr0_lF":{"name":"optionalFlatMapThrowing(_:)","abstract":"<p>Calls a throwing closure on an optional value in an <code>EventLoopFuture</code> if it exists.</p>","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitE9transform2toACyqd__Gqd__yXA_tlF":{"name":"transform(to:)","abstract":"<p>Maps the current future to contain the new type. Errors are carried over, successful (expected) results are transformed into the given instance.</p>","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitE9transform2toACyqd__GAG_tlF":{"name":"transform(to:)","abstract":"<p>Maps the current future to contain the new type. Errors are carried over, successful (expected) results are transformed into the given instance.</p>","parent_name":"EventLoopFuture"},"Extensions/EventLoopFuture.html#/s:3NIO15EventLoopFutureC8AsyncKitE5guard_4elseACyxGSbxc_s5Error_pyXAtF":{"name":"guard(_:else:)","abstract":"<p>Guards that the future&rsquo;s value satisfies the callback&rsquo;s condition or","parent_name":"EventLoopFuture"},"Extensions/Array.html#/s:Sa8AsyncKit3NIO15EventLoopFutureCyytGRszlE7flatten2onAeB0dE0_p_tF":{"name":"flatten(on:)","abstract":"<p>Converts a collection of <code>EventLoopFuture&lt;Void&gt;</code>s to an <code>EventLoopFuture&lt;Void&gt;</code>.</p>","parent_name":"Array"},"Extensions/Collection.html#/s:Sl8AsyncKitE7flatten2on3NIO15EventLoopFutureCySayqd__GGAD0fG0_p_tAFyqd__G7ElementRtzlF":{"name":"flatten(on:)","abstract":"<p>Converts a collection of <code>EventLoopFuture</code>s to an <code>EventLoopFuture</code> that wraps an array with the future values.</p>","parent_name":"Collection"},"Extensions/EventLoopGroup.html#/s:3NIO14EventLoopGroupP8AsyncKitE6futureAA0bC6FutureCyytGyF":{"name":"future()","abstract":"<p>Creates a new, succeeded <code>Future</code> from the worker&rsquo;s event loop with a <code>Void</code> value.</p>","parent_name":"EventLoopGroup"},"Extensions/EventLoopGroup.html#/s:3NIO14EventLoopGroupP8AsyncKitE6futureyAA0bC6FutureCyqd__Gqd__lF":{"name":"future(_:)","abstract":"<p>Creates a new, succeeded <code>Future</code> from the worker&rsquo;s event loop.</p>","parent_name":"EventLoopGroup"},"Extensions/EventLoopGroup.html#/s:3NIO14EventLoopGroupP8AsyncKitE6future5errorAA0bC6FutureCyqd__Gs5Error_p_tlF":{"name":"future(error:)","abstract":"<p>Creates a new, failed <code>Future</code> from the worker&rsquo;s event loop.</p>","parent_name":"EventLoopGroup"},"Extensions/EventLoop.html#/s:3NIO9EventLoopP8AsyncKitE7flattenyAA0bC6FutureCySayqd__GGSayAGyqd__GGlF":{"name":"flatten(_:)","abstract":"<p>Returns a new <code>EventLoopFuture</code> that succeeds only when all the provided futures succeed.","parent_name":"EventLoop"},"Extensions/EventLoop.html#/s:3NIO9EventLoopP8AsyncKitE7flattenyAA0bC6FutureCyytGSayAHGF":{"name":"flatten(_:)","abstract":"<p>Returns a new <code>EventLoopFuture</code> that succeeds only when all the provided futures succeed,","parent_name":"EventLoop"},"Extensions/EventLoop.html":{"name":"EventLoop"},"Extensions/EventLoopGroup.html":{"name":"EventLoopGroup"},"Extensions/Collection.html":{"name":"Collection"},"Extensions/Array.html":{"name":"Array"},"Extensions/EventLoopFuture.html":{"name":"EventLoopFuture"},"Enums/ConnectionPoolError.html#/s:8AsyncKit19ConnectionPoolErrorO6closedyA2CmF":{"name":"closed","abstract":"<p>The connection pool is closed.</p>","parent_name":"ConnectionPoolError"},"Enums/ConnectionPoolError.html":{"name":"ConnectionPoolError","abstract":"<p>Errors thrown by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ConnectionPool.html\">ConnectionPool</a></code>.</p>"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC6configAA0cD6ConfigVvp":{"name":"config","abstract":"<p>Config options for this pool.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC6sourcexvp":{"name":"source","abstract":"<p>Creates new connections when needed. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConnectionPoolSource.html\">ConnectionPoolSource</a></code>.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC9eventLoop3NIO05EventF0_pvp":{"name":"eventLoop","abstract":"<p>This connection pool&rsquo;s event loop.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC8isClosedSbvp":{"name":"isClosed","abstract":"<p>If <code>true</code>, this connection pool has been closed.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC6config6sourceACyxGAA0cD6ConfigV_xtcfc":{"name":"init(config:source:)","abstract":"<p>Creates a new <code>ConnectionPool</code>.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC04withC0y3NIO15EventLoopFutureCyqd__GAH0C0QzclF":{"name":"withConnection(_:)","abstract":"<p>Fetches a pooled connection for the lifetime of the closure.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC07requestC03NIO15EventLoopFutureCy0C0QzGyF":{"name":"requestConnection()","abstract":"<p>Requests a pooled connection.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC07releaseC0yy0C0QzF":{"name":"releaseConnection(_:)","abstract":"<p>Releases a connection back to the pool. Use with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC07requestC03NIO15EventLoopFutureCy0C0QzGyF\">requestConnection()</a></code>.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html#/s:8AsyncKit14ConnectionPoolC5close3NIO15EventLoopFutureCyytGyF":{"name":"close()","abstract":"<p>Closes the connection pool.</p>","parent_name":"ConnectionPool"},"Classes/ConnectionPool.html":{"name":"ConnectionPool","abstract":"<p>Holds a collection of active connections that can be requested and later released"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}