{"Structs/CryptoError.html#/s:6Crypto0A5ErrorV10identifierSSvp":{"name":"identifier","abstract":"<p>See <code>Debuggable.identifier</code></p>","parent_name":"CryptoError"},"Structs/CryptoError.html#/s:6Crypto0A5ErrorV6reasonSSvp":{"name":"reason","abstract":"<p>See <code>Debuggable.reason</code></p>","parent_name":"CryptoError"},"Structs/CryptoRandom.html#/s:6Crypto0A6RandomVACycfc":{"name":"init()","abstract":"<p>Creates a new <code>CryptoRandom</code>.</p>","parent_name":"CryptoRandom"},"Structs/CryptoRandom.html#/s:6Crypto0A6RandomV12generateData10Foundation0D0VSi5count_tKF":{"name":"generateData(count:)","abstract":"<p>See <code>DataGenerator</code>.</p>","parent_name":"CryptoRandom"},"Structs/RSAKey.html#/s:6Crypto6RSAKeyV7privateAC4Core23LosslessDataConvertible_p3pem_tKFZ":{"name":"private(pem:)","abstract":"<p>Creates a new <code>RSAKey</code> from a private key pem file.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:6Crypto6RSAKeyV6publicAC4Core23LosslessDataConvertible_p3pem_tKFZ":{"name":"public(pem:)","abstract":"<p>Creates a new <code>RSAKey</code> from a public key pem file.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:6Crypto6RSAKeyV6publicAC4Core23LosslessDataConvertible_p11certificate_tKFZ":{"name":"public(certificate:)","abstract":"<p>Creates a new <code>RSAKey</code> from a public key certificate file.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:6Crypto6RSAKeyV4typeAA0B4TypeOvp":{"name":"type","abstract":"<p>The specific RSA key type. Either public or private.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:6Crypto6RSAKeyV10componentsACSS1n_SS1eSSSg1dtKFZ":{"name":"components(n:e:d:)","abstract":"<p>Creates a new <code>RSAKey</code> from components.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html":{"name":"RSAKey","abstract":"<p>Represents an in-memory RSA key.</p>"},"Structs/CryptoRandom.html":{"name":"CryptoRandom","abstract":"<p>Uses OpenSSL <code>RAND_bytes</code> to generate random data.</p>"},"Structs/CryptoError.html":{"name":"CryptoError","abstract":"<p>An error encountered while working with crypto.</p>"},"Extensions/Collection.html#/s:s10CollectionP6Cryptos9Equatable7ElementRpzrlE13secureCompareSbqd__2to_tsAARd__AEQyd__AFRSlF":{"name":"secureCompare(to:)","abstract":"<p>Performs a full-comparison of all elements in two collections. If the two collections have","parent_name":"Collection"},"Extensions/Collection.html":{"name":"Collection"},"Enums/RSAPadding.html#/s:6Crypto10RSAPaddingO5pkcs1A2CmF":{"name":"pkcs1","abstract":"<p>PKCS #1 v1.5 padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:6Crypto10RSAPaddingO6sslv23A2CmF":{"name":"sslv23","abstract":"<p>SSLv23 padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:6Crypto10RSAPaddingO4noneA2CmF":{"name":"none","abstract":"<p>No padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:6Crypto10RSAPaddingO10pkcs1_OAEPA2CmF":{"name":"pkcs1_OAEP","abstract":"<p>PKCS #1 v2.0 EME-OAEP + SHA-1 + MGF1 padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:6Crypto10RSAPaddingO4x931A2CmF":{"name":"x931","abstract":"<p>X9.31 padding</p>","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:6Crypto10RSAPaddingOACSgs5Int32V8rawValue_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new RSAPadding from an Int32.","parent_name":"RSAPadding"},"Enums/RSAPadding.html#/s:6Crypto10RSAPaddingO8rawValues5Int32Vvp":{"name":"rawValue","abstract":"<p>See <code>RawRepresentable</code>.</p>","parent_name":"RSAPadding"},"Enums/RSAKeyType.html#/s:6Crypto10RSAKeyTypeO6publicA2CmF":{"name":"public","abstract":"<p>A public RSA key. Used for verifying signatures.</p>","parent_name":"RSAKeyType"},"Enums/RSAKeyType.html#/s:6Crypto10RSAKeyTypeO7privateA2CmF":{"name":"private","abstract":"<p>A private RSA key. Used for creating and verifying signatures.</p>","parent_name":"RSAKeyType"},"Enums/RSAInputFormat.html#/s:6Crypto14RSAInputFormatO6digestA2CmF":{"name":"digest","abstract":"<p>The input has been hashed already.</p>","parent_name":"RSAInputFormat"},"Enums/RSAInputFormat.html#/s:6Crypto14RSAInputFormatO7messageA2CmF":{"name":"message","abstract":"<p>Raw, unhashed message</p>","parent_name":"RSAInputFormat"},"Enums/CipherMode.html#/s:6Crypto10CipherModeO7encryptA2CmF":{"name":"encrypt","abstract":"<p>Encrypts arbitrary data to encrypted ciphertext.</p>","parent_name":"CipherMode"},"Enums/CipherMode.html#/s:6Crypto10CipherModeO7decryptA2CmF":{"name":"decrypt","abstract":"<p>Decrypts encrypted ciphertext back to its original value.</p>","parent_name":"CipherMode"},"Enums/CipherMode.html":{"name":"CipherMode","abstract":"<p>Available cipher modes. Either <code>encrypt</code> or <code>decrypt</code>.</p>"},"Enums/RSAInputFormat.html":{"name":"RSAInputFormat","abstract":"<p>Supported RSA input formats.</p>"},"Enums/RSAKeyType.html":{"name":"RSAKeyType","abstract":"<p>Supported RSA key types.</p>"},"Enums/RSAPadding.html":{"name":"RSAPadding","abstract":"<p>RSA Paddings</p>"},"Global Variables.html#/s:6Crypto6BCryptAA0B6DigestCvp":{"name":"BCrypt","abstract":"<p>Creates and verifies BCrypt hashes.</p>"},"Global Variables.html#/s:6Crypto6AES128AA6CipherCvp":{"name":"AES128","abstract":"<p>AES-128 ECB Cipher. Deprecated (see <a href=\"https://github.com/vapor/crypto/issues/59\">https://github.com/vapor/crypto/issues/59</a>).</p>"},"Global Variables.html#/s:6Crypto6AES256AA6CipherCvp":{"name":"AES256","abstract":"<p>AES-256 ECB Cipher. Deprecated (see <a href=\"https://github.com/vapor/crypto/issues/59\">https://github.com/vapor/crypto/issues/59</a>).</p>"},"Global Variables.html#/s:6Crypto9AES256CBCAA6CipherCvp":{"name":"AES256CBC","abstract":"<p>AES-256 CBC Cipher. Only use this if you know what you are doing; use AES-256 GCM otherwise (see <a href=\"https://github.com/vapor/crypto/issues/59\">https://github.com/vapor/crypto/issues/59</a>).</p>"},"Global Variables.html#/s:6Crypto9AES256GCMAA6CipherCvp":{"name":"AES256GCM","abstract":"<p>AES-256 GCM Cipher. This will the recommended encryption mode once it works (see <a href=\"https://github.com/vapor/crypto/issues/59\">https://github.com/vapor/crypto/issues/59</a>)."},"Global Variables.html#/s:6Crypto3MD4AA6DigestCvp":{"name":"MD4","abstract":"<p>MD4 digest.</p>"},"Global Variables.html#/s:6Crypto3MD5AA6DigestCvp":{"name":"MD5","abstract":"<p>MD5 digest.</p>"},"Global Variables.html#/s:6Crypto4SHA1AA6DigestCvp":{"name":"SHA1","abstract":"<p>SHA-1 digest.</p>"},"Global Variables.html#/s:6Crypto6SHA224AA6DigestCvp":{"name":"SHA224","abstract":"<p>SHA-224 (SHA-2) digest.</p>"},"Global Variables.html#/s:6Crypto6SHA256AA6DigestCvp":{"name":"SHA256","abstract":"<p>SHA-256 (SHA-2) digest.</p>"},"Global Variables.html#/s:6Crypto6SHA384AA6DigestCvp":{"name":"SHA384","abstract":"<p>SHA-384 (SHA-2) digest.</p>"},"Global Variables.html#/s:6Crypto6SHA512AA6DigestCvp":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest.</p>"},"Classes/RSA.html#/s:6Crypto3RSAC6SHA256ACvpZ":{"name":"SHA256","abstract":"<p>RSA using SHA256 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC6SHA384ACvpZ":{"name":"SHA384","abstract":"<p>RSA using SHA384 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC6SHA512ACvpZ":{"name":"SHA512","abstract":"<p>RSA using SHA512 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC9algorithmAA15DigestAlgorithmCvp":{"name":"algorithm","abstract":"<p>The hashing algorithm to use, (e.g., SHA512). See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code>.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSACAcA15DigestAlgorithmC9algorithm_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new RSA cipher using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code>.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC4sign10Foundation4DataV4Core08LosslessE11Convertible_p_AA14RSAInputFormatO6formatAA6RSAKeyV3keytKF":{"name":"sign(_:format:key:)","abstract":"<p>Signs the supplied input (in format specified by <code>format</code>).</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC6verifySb4Core23LosslessDataConvertible_p_AeF_p5signsAA14RSAInputFormatO6formatAA6RSAKeyV3keytKF":{"name":"verify(_:signs:format:key:)","abstract":"<p>Returns <code>true</code> if the supplied signature was created by signing the plaintext data.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC7decrypt10Foundation4DataV4Core08LosslessE11Convertible_p_AA10RSAPaddingO7paddingAA6RSAKeyV3keytKFZ":{"name":"decrypt(_:padding:key:)","abstract":"<p>Decrypts the supplied input.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC7encrypt10Foundation4DataV4Core08LosslessE11Convertible_p_AA10RSAPaddingO7paddingAA6RSAKeyV3keytKFZ":{"name":"encrypt(_:padding:key:)","abstract":"<p>Encrypts the supplied input.</p>","parent_name":"RSA"},"Classes/HMAC.html#/s:6Crypto4HMACC3MD4ACvpZ":{"name":"MD4","abstract":"<p>MD4 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC3MD5ACvpZ":{"name":"MD5","abstract":"<p>MD5 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC4SHA1ACvpZ":{"name":"SHA1","abstract":"<p>SHA-1 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6SHA224ACvpZ":{"name":"SHA224","abstract":"<p>SHA-224 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6SHA256ACvpZ":{"name":"SHA256","abstract":"<p>SHA-256 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6SHA384ACvpZ":{"name":"SHA384","abstract":"<p>SHA-384 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6SHA512ACvpZ":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC9algorithmAA15DigestAlgorithmCvp":{"name":"algorithm","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code> (e.g., SHA1, MD5, SHA256) to base the message authentication on.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACCAcA15DigestAlgorithmC9algorithm_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>HMAC</code> using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code>.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC12authenticate10Foundation4DataV4Core08LosslessE11Convertible_p_AhI_p3keytKF":{"name":"authenticate(_:key:)","abstract":"<p>Authenticates the message using the supplied key. This method will first initialize or reset the HMAC","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC5resety4Core23LosslessDataConvertible_p3key_tKF":{"name":"reset(key:)","abstract":"<p>Initializes or resets the HMAC context. This method sets this HMAC&rsquo;s key for subsequent calls to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/HMAC.html#/s:6Crypto4HMACC6updatey4Core23LosslessDataConvertible_p4data_tKF\">update(data:)</a></code>.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6updatey4Core23LosslessDataConvertible_p4data_tKF":{"name":"update(data:)","abstract":"<p>Updates the HMAC digest with a new chunk of data. This method can be called repeatedly for each new chunk.","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6finish10Foundation4DataVyKF":{"name":"finish()","abstract":"<p>Completes the HMAC digest. This method should be called once after one call to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/HMAC.html#/s:6Crypto4HMACC5resety4Core23LosslessDataConvertible_p3key_tKF\">reset(key:)</a></code> and one more","parent_name":"HMAC"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC5namedACSSKFZ":{"name":"named(_:)","abstract":"<p>Looks up a hash function algorithm by name (e.g., <q>sha256</q>).","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>See <code>Equatable</code>.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC4types5Int32Vvp":{"name":"type","abstract":"<p>Returns the OpenSSL NID type for this algorithm.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC3md4ACvpZ":{"name":"md4","abstract":"<p>MD4 digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC3md5ACvpZ":{"name":"md5","abstract":"<p>MD5 digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC4sha1ACvpZ":{"name":"sha1","abstract":"<p>SHA-1 digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC6sha224ACvpZ":{"name":"sha224","abstract":"<p>SHA-224 (SHA-2) digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC6sha256ACvpZ":{"name":"sha256","abstract":"<p>SHA-256 (SHA-2) digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC6sha384ACvpZ":{"name":"sha384","abstract":"<p>SHA-384 (SHA-2) digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC6sha512ACvpZ":{"name":"sha512","abstract":"<p>SHA-512 (SHA-2) digest.</p>","parent_name":"DigestAlgorithm"},"Classes/Digest.html#/s:6Crypto6DigestC9algorithmAA0B9AlgorithmCvp":{"name":"algorithm","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code> (e.g., SHA1, MD5, SHA256) to use.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestCAcA0B9AlgorithmC9algorithm_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>Digest</code> using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC4hash10Foundation4DataV4Core08LosslessE11Convertible_pKF":{"name":"hash(_:)","abstract":"<p>Creates a digest for the supplied data. This method will call <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC5resetyyKF\">.reset()</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC6updatey4Core23LosslessDataConvertible_p4data_tKF\">.update(data:)</a></code>, and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC6finish10Foundation4DataVyKF\">.finish()</a></code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC5resetyyKF":{"name":"reset()","abstract":"<p>Resets / initializes the digest algorithm context. This must be called once before calling <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC6updatey4Core23LosslessDataConvertible_p4data_tKF\">update(data:)</a></code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC6updatey4Core23LosslessDataConvertible_p4data_tKF":{"name":"update(data:)","abstract":"<p>Updates the digest with another data chunk. This can be called multiple times. Use this method for streaming digests.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC6finish10Foundation4DataVyKF":{"name":"finish()","abstract":"<p>Finalizes the digest, returning the digest data.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC6digest10Foundation4DataV4Core08LosslessE11Convertible_pKF":{"name":"digest(_:)","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC4hash10Foundation4DataV4Core08LosslessE11Convertible_pKF\">Digest.hash(_:)</a></code></p>","parent_name":"Digest"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC5namedACSSKFZ":{"name":"named(_:)","abstract":"<p>Looks up a cipher function algorithm by name (e.g., <q>aes-128-cbc</q>).","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC9aes128ecbACvpZ":{"name":"aes128ecb","abstract":"<p>AES-128 ECB cipher. Deprecated (see <a href=\"https://github.com/vapor/crypto/issues/59\">https://github.com/vapor/crypto/issues/59</a>).</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC9aes256ecbACvpZ":{"name":"aes256ecb","abstract":"<p>AES-256 ECB cipher. Deprecated (see <a href=\"https://github.com/vapor/crypto/issues/59\">https://github.com/vapor/crypto/issues/59</a>).</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC9aes256cbcACvpZ":{"name":"aes256cbc","abstract":"<p>AES-256 CBC cipher.","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC9aes256cfbACvpZ":{"name":"aes256cfb","abstract":"<p>AES-256 CFB cipher. May not be available on all platforms.","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC9aes256gcmACvpZ":{"name":"aes256gcm","abstract":"<p>AES-256 GCM cipher. This is the recommended cipher.","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC1cSPySC13evp_cipher_stVGvp":{"name":"c","abstract":"<p>OpenSSL <code>EVP_CIPHER</code> context.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmCACSPySC13evp_cipher_stVG1c_tcfc":{"name":"init(c:)","abstract":"<p>Internal init accepting a <code>EVP_CIPHER</code>.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC4types5Int32Vvp":{"name":"type","abstract":"<p>Returns the OpenSSL NID type for this algorithm.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC7keySizes5Int32Vvp":{"name":"keySize","abstract":"<p>This cipher&rsquo;s required key length.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC6ivSizes5Int32Vvp":{"name":"ivSize","abstract":"<p>This cipher&rsquo;s required initialization vector length.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC9blockSizes5Int32Vvp":{"name":"blockSize","abstract":"<p>This cipher&rsquo;s block size, used internally to allocate <q>out</q> buffers.</p>","parent_name":"CipherAlgorithm"},"Classes/Cipher.html#/s:6Crypto6CipherC9algorithmAA0B9AlgorithmCvp":{"name":"algorithm","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CipherAlgorithm.html\">CipherAlgorithm</a></code> (e.g., AES-128 ECB) to use.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherCAcA0B9AlgorithmC9algorithm_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>Cipher</code> using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CipherAlgorithm.html\">CipherAlgorithm</a></code>.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC7encrypt10Foundation4DataV4Core08LosslessE11Convertible_p_AhI_p3keyAhI_pSg2ivtKF":{"name":"encrypt(_:key:iv:)","abstract":"<p>Encrypts the supplied plaintext into ciphertext. This method will call <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html#/s:6Crypto6CipherC5resety4Core23LosslessDataConvertible_p3key_AeF_pSg2ivAA0B4ModeO4modetKF\">reset(key:iv:mode:)</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html#/s:6Crypto6CipherC6updatey4Core23LosslessDataConvertible_p4data_10Foundation0F0Vz4intotKF\">update(data:into:)</a></code>,","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC7decrypt10Foundation4DataV4Core08LosslessE11Convertible_p_AhI_p3keyAhI_pSg2ivtKF":{"name":"decrypt(_:key:iv:)","abstract":"<p>Decrypts the supplied ciphertext back to plaintext. This method will call <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html#/s:6Crypto6CipherC5resety4Core23LosslessDataConvertible_p3key_AeF_pSg2ivAA0B4ModeO4modetKF\">reset(key:iv:mode:)</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html#/s:6Crypto6CipherC6updatey4Core23LosslessDataConvertible_p4data_10Foundation0F0Vz4intotKF\">update(data:into:)</a></code>,","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC5resety4Core23LosslessDataConvertible_p3key_AeF_pSg2ivAA0B4ModeO4modetKF":{"name":"reset(key:iv:mode:)","abstract":"<p>Resets / initializes the cipher algorithm context. This must be called once before calling <code>update(data:)</code></p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC6updatey4Core23LosslessDataConvertible_p4data_10Foundation0F0Vz4intotKF":{"name":"update(data:into:)","abstract":"<p>Encrypts or decrypts a chunk of data into the supplied buffer.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC6finishy10Foundation4DataVz4into_tKF":{"name":"finish(into:)","abstract":"<p>Finalizes the encryption or decryption, appending any additional data into the supplied buffer.</p>","parent_name":"Cipher"},"Classes/BCryptDigest.html#/s:6Crypto12BCryptDigestCACycfc":{"name":"init()","abstract":"<p>Creates a new <code>BCryptDigest</code>. Use the global <code><a href=\"36f8f5912051ae747ef441d6511ca4cbGlobal Variables.html#/s:6Crypto6BCryptAA0B6DigestCvp\">BCrypt</a></code> convenience variable.</p>","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html#/s:6Crypto12BCryptDigestC4hashSS4Core23LosslessDataConvertible_p_Si4costAeF_pSg4salttKF":{"name":"hash(_:cost:salt:)","abstract":"<p>Creates a BCrypt digest for the supplied data.</p>","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html#/s:6Crypto12BCryptDigestC6verifySb4Core23LosslessDataConvertible_p_AeF_p7createdtKF":{"name":"verify(_:created:)","abstract":"<p>Verifies an existing BCrypt hash matches the supplied plaintext value. Verification works by parsing the salt and version from","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html":{"name":"BCryptDigest","abstract":"<p>Creates and verifies BCrypt hashes. Normally you will not need to initialize one of these classes and you will"},"Classes/Cipher.html":{"name":"Cipher","abstract":"<p>Cryptographic encryption and decryption functions for converting plaintext to and from ciphertext.</p>"},"Classes/CipherAlgorithm.html":{"name":"CipherAlgorithm","abstract":"<p>Specifies a cipher algorithm (e.g., AES128-ECB) to be used with a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html\">Cipher</a></code>.</p>"},"Classes/Digest.html":{"name":"Digest","abstract":"<p>Cryptographic hash functions convert data of arbitrary size to a fixed-size digest.</p>"},"Classes/DigestAlgorithm.html":{"name":"DigestAlgorithm","abstract":"<p>Cryptographic hash function algorithm.</p>"},"Classes/HMAC.html":{"name":"HMAC","abstract":"<p>HMAC is a MAC (message authentication code), i.e. a keyed hash function used for message authentication, which is based on a hash function.</p>"},"Classes/RSA.html":{"name":"RSA","abstract":"<p>RSA is an asymmetric cryptographic algorithm for signing and verifying data.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}