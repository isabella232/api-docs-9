{"Typealiases.html#/s:4Bits4Bytea":{"name":"Byte","abstract":"<p>A <code>Byte</code> is an 8-bit unsigned integer.</p>"},"Typealiases.html#/s:4Bits5Bytesa":{"name":"Bytes","abstract":"<p><code>Bytes</code> are a Swift array of 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits18BytesBufferPointera":{"name":"BytesBufferPointer","abstract":"<p><code>BytesBufferPointer</code> are a Swift <code>UnsafeBufferPointer</code> to 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits25MutableBytesBufferPointera":{"name":"MutableBytesBufferPointer","abstract":"<p><code>MutableBytesBufferPointer</code> are a Swift <code>UnsafeMutableBufferPointer</code> to 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits12BytesPointera":{"name":"BytesPointer","abstract":"<p><code>BytesPointer</code> are a Swift <code>UnsafePointer</code> to 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits19MutableBytesPointera":{"name":"MutableBytesPointer","abstract":"<p><code>MutableBytesPointer</code> are a Swift <code>UnsafeMutablePointer</code> to 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits10ByteBuffera":{"name":"ByteBuffer","abstract":"<p><code>ByteBuffer</code> is a typealias to NIO&rsquo;s <code>ByteBuffer</code>.</p>"},"Structs/BitsError.html#/s:4Bits0A5ErrorV10identifierSSvp":{"name":"identifier","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html#/s:4Bits0A5ErrorV6reasonSSvp":{"name":"reason","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html#/s:4Bits0A5ErrorV14possibleCausesSaySSGvp":{"name":"possibleCauses","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html#/s:4Bits0A5ErrorV14suggestedFixesSaySSGvp":{"name":"suggestedFixes","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html#/s:4Bits0A5ErrorV10stackTraceSaySSGSgvp":{"name":"stackTrace","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html":{"name":"BitsError","abstract":"<p>Errors that can be thrown while working with Bits.</p>"},"Functions.html#/s:4Bits2teoiySbs5UInt8V_ADSgtF":{"name":"~=(_:_:)","abstract":"<p>Implements pattern matching for <code>Byte</code> to <code>Byte?</code>.</p>"},"Extensions/UnsafeBufferPointer.html#/s:SR4Bitss5UInt8VRszlE21caseInsensitiveEquals2toSbSRyACG_tF":{"name":"caseInsensitiveEquals(to:)","abstract":"<p>Checks if the current bytes are equal to the contents of the provided ByteBuffer</p>","parent_name":"UnsafeBufferPointer"},"Extensions/Array.html#/s:Sa4Bitss5UInt8VRszlE4djb2Sivp":{"name":"djb2","abstract":"<p>Calculates <code>djb2</code> hash for this array of <code>UInt8</code>.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa4Bitss5UInt8VRszlE21lowercasedASCIIStringSayACGyF":{"name":"lowercasedASCIIString()","abstract":"<p>Efficiently converts an array of bytes uppercased ASCII characters to lowercased.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa4Bitss5UInt8VRszlE21caseInsensitiveEquals2toSbSRyACG_tF":{"name":"caseInsensitiveEquals(to:)","abstract":"<p>Checks if the current bytes are equal to the contents of the provided <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Bits18BytesBufferPointera\">BytesBufferPointer</a></code>.</p>","parent_name":"Array"},"Extensions/Data.html#/s:10Foundation4DataV4BitsE8hexDebugSSvp":{"name":"hexDebug","abstract":"<p>Returns a <code>0x</code> prefixed, space-separated, hex-encoded string for this <code>Data</code>.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV4BitsE21lowercasedASCIIStringACyF":{"name":"lowercasedASCIIString()","abstract":"<p>Efficiently converts a <code>Data</code>&lsquo;s uppercased ASCII characters to lowercased.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV4BitsE14withByteBufferyxxSRys5UInt8VGKXEKlF":{"name":"withByteBuffer(_:)","abstract":"<p>Reads from a <code>Data</code> buffer using a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Bits18BytesBufferPointera\">BytesBufferPointer</a></code> rather than a normal pointer</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV4BitsE21withMutableByteBufferyxxSrys5UInt8VGKXEKlF":{"name":"withMutableByteBuffer(_:)","abstract":"<p>Reads from a <code>Data</code> buffer using a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Bits25MutableBytesBufferPointera\">MutableBytesBufferPointer</a></code> rather than a normal pointer</p>","parent_name":"Data"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE5write13floatingPointSix_tSBRzlF":{"name":"write(floatingPoint:)","abstract":"<p>Write <code>integer</code> into this <code>ByteBuffer</code>, moving the writer index forward appropriately.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE3set13floatingPoint2atSix_SitSBRzlF":{"name":"set(floatingPoint:at:)","abstract":"<p>Write <code>integer</code> into this <code>ByteBuffer</code> starting at <code>index</code>. This does not alter the writer index.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE11peekInteger8skipping2asxSgSi_xmts010FixedWidthF0RzlF":{"name":"peekInteger(skipping:as:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE10peekString6length8skipping8encodingSSSgSi_SiSS10FoundationE8EncodingVtF":{"name":"peekString(length:skipping:encoding:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE17peekFloatingPoint8skipping2asxSgSi_xmtSBRzlF":{"name":"peekFloatingPoint(skipping:as:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE8peekData6length8skipping10Foundation0F0VSgSi_SitF":{"name":"peekData(length:skipping:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE9peekBytes5count8skippingSays5UInt8VGSgSi_SitF":{"name":"peekBytes(count:skipping:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE18requireReadInteger10endianness2asxAA10EndiannessO_xmtKs010FixedWidthG0RzlF":{"name":"requireReadInteger(endianness:as:)","abstract":"<p>Reads a <code>FixedWidthInteger</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE17requireReadString6lengthSSSi_tKF":{"name":"requireReadString(length:)","abstract":"<p>Reads a <code>String</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE15requireReadData6length10Foundation0G0VSi_tKF":{"name":"requireReadData(length:)","abstract":"<p>Reads a <code>Data</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE24requireReadFloatingPoint2asxxm_tKSBRzlF":{"name":"requireReadFloatingPoint(as:)","abstract":"<p>Reads a <code>BinaryFloatingPoint</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE24readNullTerminatedString8encodingSSSgSS10FoundationE8EncodingV_tF":{"name":"readNullTerminatedString(encoding:)","abstract":"<p>Reads a null-terminated <code>String</code> from this <code>ByteBuffer</code>.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:3NIO10ByteBufferV4BitsE31requireReadNullTerminatedString8encodingS2S10FoundationE8EncodingV_tKF":{"name":"requireReadNullTerminatedString(encoding:)","abstract":"<p>Reads a null-terminated <code>String</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/Int.html#/s:Si4BitsE5bytes9reservingSays5UInt8VGSi_tF":{"name":"bytes(reserving:)","abstract":"<p>Undocumented</p>","parent_name":"Int"},"Extensions/Byte.html#/s:s5UInt8V4BitsE8isLetterSbvp":{"name":"isLetter","abstract":"<p>Returns true if the given byte is between lowercase or uppercase A-Z in UTF8.</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE14isAlphanumericSbvp":{"name":"isAlphanumeric","abstract":"<p>Returns whether or not a given byte represents a UTF8 digit 0 through 9, or an arabic letter</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE10isHexDigitSbvp":{"name":"isHexDigit","abstract":"<p>Returns whether a given byte can be interpreted as a hex value in UTF8, ie: 0-9, a-f, A-F.</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1AABvpZ":{"name":"A","abstract":"<p>A</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1BABvpZ":{"name":"B","abstract":"<p>B</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1CABvpZ":{"name":"C","abstract":"<p>C</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1DABvpZ":{"name":"D","abstract":"<p>D</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1EABvpZ":{"name":"E","abstract":"<p>E</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1FABvpZ":{"name":"F","abstract":"<p>F</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1GABvpZ":{"name":"G","abstract":"<p>G</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1HABvpZ":{"name":"H","abstract":"<p>H</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1IABvpZ":{"name":"I","abstract":"<p>I</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1JABvpZ":{"name":"J","abstract":"<p>J</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1KABvpZ":{"name":"K","abstract":"<p>K</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1LABvpZ":{"name":"L","abstract":"<p>L</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1MABvpZ":{"name":"M","abstract":"<p>M</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1NABvpZ":{"name":"N","abstract":"<p>N</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1OABvpZ":{"name":"O","abstract":"<p>O</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1PABvpZ":{"name":"P","abstract":"<p>P</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1QABvpZ":{"name":"Q","abstract":"<p>Q</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1RABvpZ":{"name":"R","abstract":"<p>R</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1SABvpZ":{"name":"S","abstract":"<p>S</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1TABvpZ":{"name":"T","abstract":"<p>T</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1UABvpZ":{"name":"U","abstract":"<p>U</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1VABvpZ":{"name":"V","abstract":"<p>V</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1WABvpZ":{"name":"W","abstract":"<p>W</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1XABvpZ":{"name":"X","abstract":"<p>X</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1YABvpZ":{"name":"Y","abstract":"<p>Y</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1ZABvpZ":{"name":"Z","abstract":"<p>Z</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1aABvpZ":{"name":"a","abstract":"<p>a</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1bABvpZ":{"name":"b","abstract":"<p>b</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1cABvpZ":{"name":"c","abstract":"<p>c</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1dABvpZ":{"name":"d","abstract":"<p>d</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1eABvpZ":{"name":"e","abstract":"<p>e</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1fABvpZ":{"name":"f","abstract":"<p>f</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1gABvpZ":{"name":"g","abstract":"<p>g</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1hABvpZ":{"name":"h","abstract":"<p>h</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1iABvpZ":{"name":"i","abstract":"<p>i</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1jABvpZ":{"name":"j","abstract":"<p>j</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1kABvpZ":{"name":"k","abstract":"<p>k</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1lABvpZ":{"name":"l","abstract":"<p>l</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1mABvpZ":{"name":"m","abstract":"<p>m</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1nABvpZ":{"name":"n","abstract":"<p>n</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1oABvpZ":{"name":"o","abstract":"<p>o</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1pABvpZ":{"name":"p","abstract":"<p>p</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1qABvpZ":{"name":"q","abstract":"<p>q</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1rABvpZ":{"name":"r","abstract":"<p>r</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1sABvpZ":{"name":"s","abstract":"<p>s</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1tABvpZ":{"name":"t","abstract":"<p>t</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1uABvpZ":{"name":"u","abstract":"<p>u</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1vABvpZ":{"name":"v","abstract":"<p>v</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1wABvpZ":{"name":"w","abstract":"<p>w</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1xABvpZ":{"name":"x","abstract":"<p>x</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1yABvpZ":{"name":"y","abstract":"<p>y</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1zABvpZ":{"name":"z","abstract":"<p>z</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE12isWhitespaceSbvp":{"name":"isWhitespace","abstract":"<p>Returns whether or not the given byte can be considered UTF8 whitespace</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE13horizontalTabABvpZ":{"name":"horizontalTab","abstract":"<p>&lsquo;\\t&rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE7newLineABvpZ":{"name":"newLine","abstract":"<p>&lsquo;\\n&rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE14carriageReturnABvpZ":{"name":"carriageReturn","abstract":"<p>&lsquo;\\r&rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5spaceABvpZ":{"name":"space","abstract":"<p>&lsquo; &rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE11exclamationABvpZ":{"name":"exclamation","abstract":"<p>!</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5quoteABvpZ":{"name":"quote","abstract":"<p>&ldquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE10numberSignABvpZ":{"name":"numberSign","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6dollarABvpZ":{"name":"dollar","abstract":"<p>$</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE7percentABvpZ":{"name":"percent","abstract":"<p>%</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE9ampersandABvpZ":{"name":"ampersand","abstract":"<p>&amp;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE10apostropheABvpZ":{"name":"apostrophe","abstract":"<p>&lsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE15leftParenthesisABvpZ":{"name":"leftParenthesis","abstract":"<p>(</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE16rightParenthesisABvpZ":{"name":"rightParenthesis","abstract":"<p>)</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE8asteriskABvpZ":{"name":"asterisk","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4plusABvpZ":{"name":"plus","abstract":"<p>+</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5commaABvpZ":{"name":"comma","abstract":"<p>,</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6hyphenABvpZ":{"name":"hyphen","abstract":"<p>-</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6periodABvpZ":{"name":"period","abstract":"<p>.</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE12forwardSlashABvpZ":{"name":"forwardSlash","abstract":"<p>/</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE9backSlashABvpZ":{"name":"backSlash","abstract":"<p>\\</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5colonABvpZ":{"name":"colon","abstract":"<p>:</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE9semicolonABvpZ":{"name":"semicolon","abstract":"<p>;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6equalsABvpZ":{"name":"equals","abstract":"<p>=</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE12questionMarkABvpZ":{"name":"questionMark","abstract":"<p>?</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE2atABvpZ":{"name":"at","abstract":"<p>@</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE17leftSquareBracketABvpZ":{"name":"leftSquareBracket","abstract":"<p>[</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE18rightSquareBracketABvpZ":{"name":"rightSquareBracket","abstract":"<p>]</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5caretABvpZ":{"name":"caret","abstract":"<p>^</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE10underscoreABvpZ":{"name":"underscore","abstract":"<p>_</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE8backtickABvpZ":{"name":"backtick","abstract":"<p>`</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5tildeABvpZ":{"name":"tilde","abstract":"<p>~</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE16leftCurlyBracketABvpZ":{"name":"leftCurlyBracket","abstract":"<p>{</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE17rightCurlyBracketABvpZ":{"name":"rightCurlyBracket","abstract":"<p>}</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE8lessThanABvpZ":{"name":"lessThan","abstract":"<p>&lt;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE11greaterThanABvpZ":{"name":"greaterThan","abstract":"<blockquote>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4pipeABvpZ":{"name":"pipe","abstract":"<table><thead>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4crlfSayABGvpZ":{"name":"crlf","abstract":"<p>Defines the <code>crlf</code> used to denote line breaks in HTTP and many other formatters</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE7isDigitSbvp":{"name":"isDigit","abstract":"<p>Returns whether or not a given byte represents a UTF8 digit 0 through 9</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4zeroABvpZ":{"name":"zero","abstract":"<p>0 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE3oneABvpZ":{"name":"one","abstract":"<p>1 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE3twoABvpZ":{"name":"two","abstract":"<p>2 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5threeABvpZ":{"name":"three","abstract":"<p>3 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4fourABvpZ":{"name":"four","abstract":"<p>4 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4fiveABvpZ":{"name":"five","abstract":"<p>5 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE3sixABvpZ":{"name":"six","abstract":"<p>6 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5sevenABvpZ":{"name":"seven","abstract":"<p>7 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5eightABvpZ":{"name":"eight","abstract":"<p>8 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4nineABvpZ":{"name":"nine","abstract":"<p>9 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6stringSSvp":{"name":"string","abstract":"<p>Returns the <code>String</code> representation of this <code>Byte</code> (unicode scalar).</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5tildaABvpZ":{"name":"tilda","abstract":"<p>~</p>","parent_name":"Byte"},"Extensions/Byte.html":{"name":"Byte","abstract":"<p>Adds alphabet conveniences to <code>Byte</code>.</p>"},"Extensions/Int.html":{"name":"Int"},"Extensions/ByteBuffer.html":{"name":"ByteBuffer"},"Extensions/Data.html":{"name":"Data"},"Extensions/Array.html":{"name":"Array"},"Extensions/UnsafeBufferPointer.html":{"name":"UnsafeBufferPointer"},"Global Variables.html#/s:4Bits17asciiCasingOffsets5UInt8Vvp":{"name":"asciiCasingOffset","abstract":"<p>Offset between <code>a</code> and <code>A</code> in ASCII encoding.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}